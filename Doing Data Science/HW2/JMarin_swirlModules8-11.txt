
#swirl 8 (logic)
> library(swirl)
> swirl()
> TRUE == true
> TRUE == TRUE
> (FALSE == TRUE) == FALSE
> 6 == 7
> 6 < 7
> 10 <= 10
> 5 != 7
> !(5 == 7)
> FALSE & FALSE
> TRUE & c(TRUE, FALSE, FALSE)
> TRUE && c(true, FALSE, FALSE)
> TRUE && c(TRUE, FALSE, FALSE)
> TRUE | c(TRUE, FALSE, FALSE)
> TRUE || c(TRUE, FALSE, FALSE)
> 5 > 8 || 6 != 7 && 4 > 3.9
> 5 > 8 || 6 != 8 && 4 > 3.9
> xor(5 == 6, !FALSE)
> ints <- sample(10)
> ints
> ints > 5
> which(ints > 7)
> any(ints < 0)
> all(ints > 0)

#swirl9

> library(swirl)
> swirl()
> Sys.Date()
> mean(c(2, 5, 5))
> mean(c(2, 4, 5))
> submit()
> boring_function('my first function!')
> boring_function('My first function!')
> boring_function
> submit()
> my_mean(c(4, 5, 10))
> submit()
> remainder(5)
> remainder(11, 5)
> remainder(divisor = 11, num = 5)
> remainder(4, div = 2)
> args(remainder)
> submit()
> evaluate(std, c(1.4, 3.6, 7.9, 8.8))
> evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
> evaluate(function(x){x+1}, 6)
> evaluate(function(x){x[1]}, c(8, 4, 0))
> evaluate(function(x){x[-1]}, c(8, 4, 0))
> evaluate(function(x){x[length(x)]}, c(8, 4, 0))
> ?paste
> paste("Programming", "is", "fun!")
> submit()
> telegram(c("Hello", "world", ",", "how", "are", "we", "today", "?"))
> play()
> telegram("Good", "morning")
> telegram(c("Good", "morning"))
> nxt()
> submit()
> mad_libs(place = London, adjustive = "beautiful", noun = "dog")
> mad_libs(place = "London", adjustive = "beautiful", noun = "dog")
> submit()
> "I" %p% "love" %p% "R!"


#swirl 10

> library(swirl)
> swirl()
> head(flags)
> dim(flags)
> class(flags)
> cls_list <- lapply(flags, class)
> cls_list
> class(cls_list)
> as.character(cls_list)
> play()
> class(cls_list)
> nxt()
> ?sapply
> cls_vect <- sapply(flags, class)
> class(cls_vect)
> sum(flags$orange)
> flag_colors <- flags[, 11:17]
> head(flag_colors)
> lapply(flag_colors, sum)
> sapply(flag_colors)
> sapply(flag_colors, sum)
> sapply(flag_colors, mean)
> flag_shapes <- flags[, 19:23]
> lapply(flag_shapes, range)
> sapply(flag_shapes, range)
> shape_mat <- sapply(flag_shapes, range)
> shape_mat
> class(shape_mat)
> unique(c(3,4, 5, 5, 5, 6, 6))
> unique_vals <- lapply(flags, unique)
> unique_vals
> sapply(unique_vals, length)
> sapply(flags, unique)
> lapply(unique_vals, function(elem) elem[2])


#swirl 11

> library(swirl)
> swirl()
> sapply(flags, unique)
> vapply(flags, unique, numeric(1))
> ok()
> sapply(flags, class)
> vapply(flags, class, character(1))
> ?tapply
> table(flags$landmass)
> table(flags$animate)
> tapply(flags$animate, flag$landmass, mean)
> tapply(flags$animate, flags$landmass, mean)
> tapply(flags$population, flags$red, summary)
> tapply(flags$population, flags$landmass, summary)
